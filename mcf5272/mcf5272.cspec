<?xml version="1.0" encoding="UTF-8"?>

<compiler_spec>
  <data_organization>
    <absolute_max_alignment value="0" />
    <machine_alignment value="2" />
    <default_alignment value="1" />
    <default_pointer_alignment value="4" />
    <pointer_size value="4" />
    <wchar_size value="2" />
    <short_size value="2" />
    <integer_size value="4" />
    <long_size value="4" />
    <long_long_size value="8" />
    <float_size value="4" />
    <double_size value="8" />
    <long_double_size value="8" />
    <size_alignment_map>
      <entry size="1" alignment="1" />
      <entry size="2" alignment="2" />
      <entry size="4" alignment="4" />
      <entry size="8" alignment="4" />
    </size_alignment_map>
  </data_organization>
  
  <global>
    <range space="ram"/>
  </global>
  
  <stackpointer register="A7" space="ram"/>
  
  <funcptr align="2"/>
  
  <spacebase name="A5" register="A5" space="ram"/>
  
  <returnaddress>
    <varnode space="ram" offset="0" size="4"/>
  </returnaddress>
  
  <!-- Default calling convention -->
  <default_proto>
    <prototype name="__stdcall" extrapop="0" stackshift="0">
      <input>
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="D0"/>
        </pentry>
        <pentry minsize="1" maxsize="4">
          <register name="D0"/>
        </pentry>
        <pentry minsize="1" maxsize="4">
          <register name="D1"/>
        </pentry>
        <pentry minsize="1" maxsize="4">
          <register name="A0"/>
        </pentry>
        <pentry minsize="1" maxsize="4">
          <register name="A1"/>
        </pentry>
        <pentry minsize="1" maxsize="500" align="4">
          <addr offset="4" space="stack"/>
        </pentry>
      </input>
      <output>
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="D0"/>
        </pentry>
        <pentry minsize="1" maxsize="4">
          <register name="D0"/>
        </pentry>
        <pentry minsize="5" maxsize="8">
          <addr space="join" piece1="D0" piece2="D1"/>
        </pentry>
      </output>
      <unaffected>
        <register name="D2"/>
        <register name="D3"/>
        <register name="D4"/>
        <register name="D5"/>
        <register name="D6"/>
        <register name="D7"/>
        <register name="A2"/>
        <register name="A3"/>
        <register name="A4"/>
        <register name="A5"/>
        <register name="A6"/>
        <register name="A7"/>
      </unaffected>
      <killedbycall>
        <register name="D0"/>
        <register name="D1"/>
        <register name="A0"/>
        <register name="A1"/>
        <register name="CCR"/>
      </killedbycall>
    </prototype>
  </default_proto>
  
  <!-- ColdFire-specific calling convention -->
  <prototype name="coldfire" extrapop="0" stackshift="0">
    <input>
      <pentry minsize="1" maxsize="4" metatype="float">
        <register name="D0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D1"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D2"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="A0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="A1"/>
      </pentry>
      <pentry minsize="1" maxsize="500" align="4">
        <addr offset="4" space="stack"/>
      </pentry>
    </input>
    <output>
      <pentry minsize="1" maxsize="4" metatype="float">
        <register name="D0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D0"/>
      </pentry>
      <pentry minsize="5" maxsize="8">
        <addr space="join" piece1="D0" piece2="D1"/>
      </pentry>
    </output>
    <unaffected>
      <register name="D3"/>
      <register name="D4"/>
      <register name="D5"/>
      <register name="D6"/>
      <register name="D7"/>
      <register name="A2"/>
      <register name="A3"/>
      <register name="A4"/>
      <register name="A5"/>
      <register name="A6"/>
      <register name="A7"/>
    </unaffected>
    <killedbycall>
      <register name="D0"/>
      <register name="D1"/>
      <register name="D2"/>
      <register name="A0"/>
      <register name="A1"/>
      <register name="CCR"/>
    </killedbycall>
  </prototype>
  
  <!-- Interrupt service routine calling convention -->
  <prototype name="interrupt" extrapop="0" stackshift="0">
    <input>
    </input>
    <output>
    </output>
    <unaffected>
      <register name="D0"/>
      <register name="D1"/>
      <register name="D2"/>
      <register name="D3"/>
      <register name="D4"/>
      <register name="D5"/>
      <register name="D6"/>
      <register name="D7"/>
      <register name="A0"/>
      <register name="A1"/>
      <register name="A2"/>
      <register name="A3"/>
      <register name="A4"/>
      <register name="A5"/>
      <register name="A6"/>
      <register name="A7"/>
    </unaffected>
    <killedbycall>
      <register name="CCR"/>
    </killedbycall>
  </prototype>
  
  <!-- System call convention -->
  <prototype name="syscall" extrapop="0" stackshift="0">
    <input>
      <pentry minsize="1" maxsize="4">
        <register name="D0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D1"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D2"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="D3"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="A0"/>
      </pentry>
      <pentry minsize="1" maxsize="4">
        <register name="A1"/>
      </pentry>
    </input>
    <output>
      <pentry minsize="1" maxsize="4">
        <register name="D0"/>
      </pentry>
    </output>
    <unaffected>
      <register name="D4"/>
      <register name="D5"/>
      <register name="D6"/>
      <register name="D7"/>
      <register name="A2"/>
      <register name="A3"/>
      <register name="A4"/>
      <register name="A5"/>
      <register name="A6"/>
      <register name="A7"/>
    </unaffected>
    <killedbycall>
      <register name="D0"/>
      <register name="D1"/>
      <register name="D2"/>
      <register name="D3"/>
      <register name="A0"/>
      <register name="A1"/>
      <register name="CCR"/>
    </killedbycall>
  </prototype>
  
  <callfixup name="get_pc_thunk">
    <target name="__i686.get_pc_thunk.bx"/>
    <pcode>
      <body><![CDATA[
        A0 = inst_next;
      ]]></body>
    </pcode>
  </callfixup>
  
  <callotherfixup targetop="segment">
    <pcode>
      <body><![CDATA[
        segment:2 = 0;
      ]]></body>
    </pcode>
  </callotherfixup>
  
  <callotherfixup targetop="segmentoff">
    <pcode>
      <body><![CDATA[
        segmentoff:4 = 0;
      ]]></body>
    </pcode>
  </callotherfixup>
</compiler_spec>

